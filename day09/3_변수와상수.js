/* [변수]
1. 정의 : *하나*의 자료/데이터를 담아 두는 (메모리) 공간
2. 목적 : 재사용성, 가독성
3. 사용법
    1. let 변수명
4. 형태 
    1. let : 변수를 선언하기 위한 키워드/명령어
    2. 변수명 : 메모리 공간의 상징적인 이름
    3. = : 오른쪽 항을 왼쪽항에 대입/할당/넣는다.
    4. 자료 : 변수에 저장할 자료

    [상수]
    1. 정의 : 하나의 자료/데이터를 담아 두는 공간 이면서 수정 불가능
    2. 목적 : 절댓값 , 협업간의 코드 변경 안하도록 사용.
    3. 사용법 : const 변수명 = 초기값  *상수는 무조건 초기값이 필요하다.
    4. 형태
        1. const : 상수를 선언하기 위한 키워드
        2. 변수명 : 메모리 공간의 상징적 이름
        3. =    : 오른쪽 항을 왼쪽 항에 대입/할당/넣는다.
        4. 자료 : 상수(고정)으로 저장할 자료

    */


let width 
let height

width = 200;
height = 50;
let area = width * height;
console.log(area);

// 1. 변수 선언 방법
let 이름1 
let 이름2 = "유재석" // 초기값 있는 변수선언

//2. 변수를 호출하는 방법, 변수명 , 주의할점 : 문자열 처리 하면 안된다.
console.log(이름1);
console.log(이름2); //이름2라는 변수가 가지는 변수값을 호출

//3. 변수의 값을 수정하는 방법 , 변수명 = 새로운 값
이름1 = "강호동"  //이름1 새로운값 대입
이름2 = "유재석2" //이름2 새로운값 대입
console.log(이름1)
console.log(이름2)


// 1. 상수 선언 방법
const 이름3 = "신동엽"

// 2. 상수를 호출하는 방법 , 변수명
console.log(이름3)

// 3. 상수의 값을 수정하는 방법은 없다. 오류가 발생됨.
이름3 = "신동엽2"  // 수정불가...오류: Assignment to constant variable.

// [생각해보기1]
let point1 = 50  // 변수명 : point1 , 리터럴 : 50
let point4 = 50  // 변수명 : point4 , 리터럴 : 50 (*point1 변수가 갖는 50과 동일)
let point2 = 100 // 변수명 : point2 , 리터럴 : 100
let point3 = point1 + point2  // 변수명 : point3 , 리터럴 : 150
    // 위 코드에서 총 리터럴의 개수? 3개
    // + 연산 : 계산을 통해 하나의 결과를 도출하는 행위